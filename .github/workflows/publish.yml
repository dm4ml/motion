name: publish

on:
  push:
    branches:
      - main

jobs:
  publish-to-pypi:
    runs-on: ubuntu-latest
    if: ${{github.event.head_commit.author.name != 'github-actions[bot]' }}
    steps:
      - name: Print author
        run: |
          echo "Commit author name: ${{ github.event.head_commit.author.name }}"
          echo "Commit author email: ${{ github.event.head_commit.author.email }}"
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
          fetch-depth: 0 # otherwise, you will failed to push refs to dest repo
      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install Poetry
        uses: snok/install-poetry@v1
      - name: Bump version
        id: bump_version
        run: |
          poetry version patch
      - name: Build and publish
        run: |
          poetry config pypi-token.pypi ${{ secrets.PYPI_API_TOKEN }}
          poetry build
          poetry publish
          git add pyproject.toml
          git commit -m "Bump up version"
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.BRANCH_PROTECTION_WORKAROUND }}
          branch: main

      - name: Set release number
        run: echo "RELEASE_NUMBER=$(poetry version --no-ansi | awk -F' ' '{print $2}')" >> $GITHUB_ENV
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_NUMBER: ${{ env.RELEASE_NUMBER }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ env.RELEASE_NUMBER }}
          body: |
            An autorelease from the latest version of main.
          draft: false
          prerelease: true